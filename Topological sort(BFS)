import java.util.*;
public class Solution 
{
    public static ArrayList<Integer> topologicalSort(ArrayList<ArrayList<Integer>> edges, int v, int e) 
    {
        // Write your code here
        ArrayList<ArrayList<Integer>> adj=new ArrayList<>();
        for(int i=0;i<v;i++){
            adj.add(new ArrayList<>());
        }
        for(int i=0;i<edges.size();i++){
            adj.get(edges.get(i).get(0)).add(edges.get(i).get(1));
        }
        int indegree[]=new int[v];
        for(int i=0;i<adj.size();i++){
            for(int j=0;j<adj.get(i).size();j++){
                indegree[adj.get(i).get(j)]++;
            }
        }
        ArrayList<Integer> topo=new ArrayList<>();
         Queue<Integer> q=new LinkedList<>();
        for(int i=0;i<v;i++){
             if(indegree[i]==0){
            q.add(i);
             }
        }
        topoSort(adj,indegree,topo,q);
        return topo;
    }
    public static void topoSort(ArrayList<ArrayList<Integer>>adj,int[]indegree,ArrayList<Integer> topo,Queue<Integer>q){
          while(!q.isEmpty()){
                int front=q.poll();
                topo.add(front);
                for(int i=0;i<adj.get(front).size();i++){
                    int next=adj.get(front).get(i);
                   
                        indegree[next]--;
                        if(indegree[next]==0)q.add(next);
                    
                }
            }
        
    }
}
