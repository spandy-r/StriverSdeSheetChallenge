import java.util.*;
/*

	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T val;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T val) {
			this.val = val;
			this.left = null;
			this.right = null;
		}
	}

*/

import java.util.ArrayList;

public class Solution {

  public static ArrayList<Integer> getLevelOrder(BinaryTreeNode root) {
    //Your code goes here
      Queue<BinaryTreeNode> q=new LinkedList<>();
      ArrayList<Integer> ans=new ArrayList<>();
      if(root==null)return ans;
      q.add(root);
      q.add(null);
      while(!q.isEmpty()){
          BinaryTreeNode node=q.remove();
          if(node==null && !q.isEmpty()){
              q.add(null);
          }else if(node!=null && !q.isEmpty()){
              ans.add(node.val);
              if(node.left!=null){
                  q.add(node.left);
              }
              if(node.right!=null){
                  q.add(node.right);
              }
          }
      }
      
      return ans;
      
  }

}
