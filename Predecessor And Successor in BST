/*************************************************************
    Following is the Binary Tree node structure

	class TreeNode<T> {
	    public T data;
	    public TreeNode<T> left;
	    public TreeNode<T> right;

	    TreeNode(T data) {
	        this.data = data;
	        left = null;
	        right = null;
	    }
	}

*************************************************************/

import java.util.*;


public class Solution {
	public static ArrayList<Integer> predecessorSuccessor(BinaryTreeNode<Integer> root, int key) {
		// Write your code here.
        ArrayList<Integer> ans=new ArrayList<>();
        int arr[]=new int[2];
        arr[0]=-1;
        arr[1]=-1;
        BinaryTreeNode<Integer> one=root;
        BinaryTreeNode<Integer> two=root;
        successor(one,key,arr);
        predecessor(two,key,arr);
        ans.add(arr[0]);
        ans.add(arr[1]);
        return ans;
	}
    public static void successor(BinaryTreeNode<Integer>root,int key,int arr[]){
        
        while(root!=null){
        if(root.data<=key)
           root=root.right;
    else{
      
        arr[1]=root.data;
        root=root.left;
    }
        }
        
    }
     public static void predecessor(BinaryTreeNode<Integer>root,int key,int arr[]){
    while(root!=null){
        if(root.data<key){
            arr[0]=root.data;
            root=root.right;
        }else{
            root=root.left;
    }
    }
        
    }
}
