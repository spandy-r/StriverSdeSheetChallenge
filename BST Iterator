/*
    Definition of Node class for reference

    class TreeNode<T> 
    {
        public T data;
        public TreeNode<T> left;
        public TreeNode<T> right;

        TreeNode(T data)
        {
            this.data = data;
            left = null;
            right = null;
        }
    }

*/
import java.util.*;
public class Solution {

    static class BSTIterator{
       Stack<TreeNode<Integer>> s;
        int n;
        BSTIterator(TreeNode<Integer> root){
            // Write your code here
            s=new Stack<>();
           pushAll(root);
           
        }

        int next(){
            // Write your code here
            TreeNode<Integer> temp=s.pop();
            pushAll(temp.right);
            return temp.data;
        }

        boolean hasNext(){
            // Write your code here
            return !s.isEmpty();
        }
        
        void pushAll(TreeNode<Integer>root){
            while(root!=null){
                s.push(root);
                root=root.left;
                
            }
        }
 
    }
}

/*
    Your BSTIterator object will be instantiated and called as such:
    BSTIterator iterator = new BSTIterator(root);
    while(iterator.hasNext())
    {
       print(iterator.next()+" ");
    }
*/
