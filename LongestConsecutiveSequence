// logic:
// step 1: take a hashset,add all elements of array in it.
// step 2: traverse in array,check if a[i]-1 exist in set.
// step 3: if yes,move to next element....if no, check if a[i]+1 exist.
// step 4: if yes,maintain a count,check if a[i]+2 exist and so on.....if no,move to next element.Also update maxCount if count>maxCount.
 import java.util.* ;
import java.io.*; 
public class Solution {
   public static int lengthOfLongestConsecutiveSequence(int[] arr, int N) {
       // Write your code here.
       HashSet<Integer> set=new HashSet<>();
       for(int i:arr){
           set.add(i);
       }
       int maxCount=0;
       for(int i=0;i<arr.length;i++){
           if(!set.contains(arr[i]-1)){
               int count=1;
               int f=1;
               while(set.contains(arr[i]+f)){
                   count++;
                   f++;
               }
               if(count>maxCount){
                   maxCount=count;
               }
           }
       }
       
       return maxCount;
   }
}
