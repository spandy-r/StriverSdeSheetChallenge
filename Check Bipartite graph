import java.util.*;

public class Solution {

    public static boolean isGraphBirpatite(ArrayList<ArrayList<Integer>> edges) {

        // Write your code here
        int[]color=new int[edges.size()];
        Arrays.fill(color,-1);
        for(int i=0;i<edges.size();i++){
            if(color[i]==-1){
                color[i]=0;
               if(!helper(edges,i,color))return false;
            }
        }
        return true;
    }
    public static boolean helper(ArrayList<ArrayList<Integer>> edges,int sv,int[]color){
        Queue<Integer> q=new LinkedList<>();
        q.add(sv);
        while(!q.isEmpty()){
            int front=q.poll();
            int c=color[front];
            for(int i=0;i<edges.get(front).size();i++){
                int next=edges.get(front).get(i);
                if(next==1){
                    if(color[i]==-1){
                        color[i]=1-c;
                        
                        q.add(i);
                    }else{
                        if(color[i]==c)return false;
                    }
                }
            }
        }
        return true;
    }
    
}
